using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Sttp.WireProtocol.NegotiateSessionResponse
{
    public enum SubCommand : byte
    {
        /// <summary>
        /// An invalid command to indicate that nothing is assigned.
        /// This cannot be sent over the wire.
        /// </summary>
        Invalid = 0x00,

        /// <summary>
        /// The specified request failed. 
        /// 
        /// Payload: 
        /// string Reason      - A user friendly message for the failure, can be null.
        /// string Details     - A not so friendly message more helpful for troubleshooters.
        /// </summary>
        RequestFailed,

        /// <summary>
        /// Indicates a successful reverse connection
        /// 
        /// Payload: None
        /// </summary>
        ReverseConnectionSuccess,

        /// <summary>
        /// From the list of supported functionality, 
        /// the server selects the desired mode of operation
        /// and responds to the client.
        /// 
        /// Payload:
        /// SttpNamedSet Options
        /// 
        /// </summary>
        DesiredOperation,

        /// <summary>
        /// Indicates a successful instance change
        /// 
        /// Payload: None
        /// </summary>
        ChangeInstanceSuccess,

        /// <summary>
        /// The name of each instance.
        /// 
        /// int NumberOfInstances
        /// {
        ///     String Name,
        ///     String Description
        /// }
        /// </summary>
        InstanceList,

        /// <summary>
        /// Responds to a cipher change request.
        /// 
        /// Payload:
        /// byte[] nonce
        /// 
        /// Remarks: 
        /// In order to ensure that the key is never compromised the key is derived from random numbers generated by both the client and server.
        /// key = SHA256(ServerNonce | ClientNonce)
        /// iv = SHA256(ClientNonce | ServerNonce)
        /// 
        /// </summary>
        ChangeUdpCiperResponse,
    }


}
